<!-- ANGARA BRAINTREE SUPPORT -->
<script type="text/javascript">

    vZeroIntegration.addMethods({

        /**
         * Validate the entire checkout
         * Annoyingly IWD hasn't already wrapped this in a function
         */
        validateAll: function() {
			return true;
            var validators = [];
            for (var i = 0; i < checkout.allForms.length; i++) {
                validators[i] = new Validation(checkout.allForms[i]);
            }
            return (validators[0].validate() && validators[1].validate() && checkout.shippingMethodValidate() && checkout.paymentMethodValidate() && (validators[3] ? validators[3].validate() : true));
        },

        /**
         * Attach an observer to the submit action of the checkout to tokenize the card details
         */
        prepareSubmitObserver: function() {

            // Store a pointer to the vZero integration
            var vzeroIntegration = this;

            // Store the old complete checkout function
            var _originalSave = OPC.prototype.save;

            // Re-define the original method so we can do some jazz with it
            OPC.prototype.save = function () {

                if (vzeroIntegration.shouldInterceptSubmit('creditcard')) {

                    // Store a pointer to the payment class
                    var paymentThis = this;
                    var paymentArguments = arguments;

                    // If everything was a success on the checkout end, let's submit the vZero integration
                    vzeroIntegration.submit('creditcard', function () {
                        return _originalSave.apply(paymentThis, paymentArguments);
                    });

                } else {
                    // If not run the original code
                    return _originalSave.apply(this, arguments);
                }

            };

        },
		preparePaymentMethodSwitchObserver: function () {
			var vzeroIntegration = this;
			 vZero.prototype.creditCardLoaded = function() {
                // When the credit card is loaded call the init hosted fields function
                vzeroIntegration.initHostedFields();
                vzeroIntegration.initSavedMethods();
            };
            vZero.prototype.paypalLoaded = function() {
                vzeroIntegration.initSavedMethods();
            };
		},

        /**
         * The action to run after the PayPal action has been completed
         */
        submitCheckout: function() {
            // Run the original checkouts submit action
            return checkout.save();
        }

    });
	
	if(typeof vzero !== 'undefined') {
        vzero.creditCardLoaded();
    }
    /**
     * Start a new instance of our integration
     *
     * @type {vZeroIntegration}
     */
    new vZeroIntegration(
        (window.vzero || false),
        (window.vzeroPaypal || false),
        '<div id="paypal-complete"><div id="paypal-container"></div></div>',
        '#review-buttons-container button',
        false,
        true,
        true // Submit after payment
    );
	
	var forcePaymentMethod = '';
	function switchMethodCustom(){
		if(document.getElementById('p_method_gene_braintree_creditcard')){
			payment.switchMethod('gene_braintree_creditcard');
		} else {
			clearTimeout(forcePaymentMethod);
			forcePaymentMethod = setTimeout(function(){
				switchMethodCustom();
			},100);
		}			
	}
	switchMethodCustom();

</script>