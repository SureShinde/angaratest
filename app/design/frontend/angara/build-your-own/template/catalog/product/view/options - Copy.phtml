<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php $_options = Mage::helper('core')->decorateArray($this->getOptions()) ?>
<?php if (count($_options)):?>
    <script type="text/javascript">
    //<![CDATA[
    var optionFileUpload = {
        productForm : $('product_addtocart_form'),
        formAction : '',
        formElements : {},
        upload : function(element){
            this.formElements = this.productForm.select('input', 'select', 'textarea', 'button');
            this.removeRequire(element.readAttribute('id').sub('option_', ''));

            template = '<iframe id="upload_target" name="upload_target" style="width:0; height:0; border:0;"><\/iframe>';

            Element.insert($('option_'+element.readAttribute('id').sub('option_', '')+'_uploaded_file'), {after: template});

            this.formAction = this.productForm.action;

            var baseUrl = '<?php echo $this->getUrl('*/product/upload') ?>';
            var urlExt = 'option_id/'+element.readAttribute('id').sub('option_', '');

            this.productForm.action = parseSidUrl(baseUrl, urlExt);
            this.productForm.target = 'upload_target';
            this.productForm.submit();
            this.productForm.target = '';
            this.productForm.action = this.formAction;
        },
        removeRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('id') != 'option_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='disabled';
                }
            }
        },
        addRequire : function(skipElementId){
            for(var i=0; i<this.formElements.length; i++){
                if (this.formElements[i].readAttribute('name') != 'options_'+skipElementId+'_file' && this.formElements[i].type != 'button') {
                    this.formElements[i].disabled='';
                }
            }
        },
        uploadCallback : function(data){
            this.addRequire(data.optionId);
            $('upload_target').remove();

            if (data.error) {

            } else {
                $('option_'+data.optionId+'_uploaded_file').value = data.fileName;
                $('option_'+data.optionId+'_file').value = '';
                $('option_'+data.optionId+'_file').hide();
                $('option_'+data.optionId+'').hide();
                template = '<div id="option_'+data.optionId+'_file_box"><a href="#"><img src="var/options/'+data.fileName+'" alt=""><\/a><a href="#" onclick="optionFileUpload.removeFile('+data.optionId+')" title="Remove file" \/>Remove file<\/a>';

                Element.insert($('option_'+data.optionId+'_uploaded_file'), {after: template});
            }
        },
        removeFile : function(optionId)
        {
            $('option_'+optionId+'_uploaded_file').value= '';
            $('option_'+optionId+'_file').show();
            $('option_'+optionId+'').show();

            $('option_'+optionId+'_file_box').remove();
        }
    }
    var optionTextCounter = {
        count : function(field,cntfield,maxlimit){
            if (field.value.length > maxlimit){
                field.value = field.value.substring(0, maxlimit);
            } else {
                cntfield.innerHTML = maxlimit - field.value.length;
            }
        }
    }

    Product.Options = Class.create();
    Product.Options.prototype = {
        initialize : function(config){
            this.config = config;
            this.reloadPrice();
            document.observe("dom:loaded", this.reloadPrice.bind(this));
        },
        reloadPrice : function(){
            price = new Number();
            config = this.config;
            skipIds = [];
            $$('.product-custom-option').each(function(element){
                var optionId = 0;
                element.name.sub(/[0-9]+/, function(match){
                    optionId = match[0];
                });
                if (this.config[optionId]) {
                    if (element.type == 'checkbox' || element.type == 'radio') {
                        if (element.checked) {
                            if (config[optionId][element.getValue()]) {
                                price += parseFloat(config[optionId][element.getValue()]);
                            }
                        }
                    } else if(element.hasClassName('datetime-picker') && !skipIds.include(optionId)) {
                        dateSelected = true;
                        $$('.product-custom-option[id^="options_' + optionId + '"]').each(function(dt){
                            if (dt.getValue() == '') {
                                dateSelected = false;
                            }
                        });
                        if (dateSelected) {
                            price += parseFloat(this.config[optionId]);
                            skipIds[optionId] = optionId;
                        }
                    } else if(element.type == 'select-one' || element.type == 'select-multiple') {
                        if (element.options) {
                            $A(element.options).each(function(selectOption){
                                if (selectOption.selected) {
                                    if (this.config[optionId][selectOption.value]) {
                                        price += parseFloat(this.config[optionId][selectOption.value]);
                                    }
                                }
                            });
                        }
                    } else {
                        if (element.getValue().strip() != '') {
                            price += parseFloat(this.config[optionId]);
                        }
                    }
                }
            });
            try {
                optionsPrice.changePrice('options', price);
                optionsPrice.changePrice('optionsPriceInclTax', price);
                optionsPrice.reload();
            } catch (e) {

            }
        }
    }
    function validateOptionsCallback(elmId, result){
        var container = $(elmId).up('ul.options-list');
        if (result == 'failed') {
            container.removeClassName('validation-passed');
            container.addClassName('validation-failed');
        } else {
            container.removeClassName('validation-failed');
            container.addClassName('validation-passed');
        }
    }
    var opConfig = new Product.Options(<?php echo $this->getJsonConfig() ?>);
    //]]>	
    </script>
    <dl>
    <?php 
	$p=1;	
	?>   
    <?php foreach($_options as $_option): ?>
    	<?php $optionType = $_option->getType(); ?>
    	<?php //echo $optionType; ?>            
    	<?php $values = $_option->getValues(); ?>		
        <?php
		$skuArr = '';
		$product_option_type = '';		
		if(count($values)>0)
		{
			foreach ($values as $k => $v):
				$skuArr[] = $v->getSku();					
				if (stripos($v->getSku(), 'CS') !== false) {					
					$product_option_type = 'stone_size';
					$display_on_load = 'style="display:block;"';
				}elseif (stripos($v->getSku(), 'SS') !== false) {
					$product_option_type = 'side_stone_size';	
					$display_on_load = 'style="display:none;"';
				}elseif (stripos($v->getSku(), 'SQ') !== false) {
					$product_option_type = 'stone_quality';
					$display_on_load = 'style="display:none;"';
				}elseif (stripos($v->getSku(), 'MT') !== false) {
					$product_option_type = 'metal_type';
					$display_on_load = 'style="display:none;"';		
				}else {
					$product_option_type = 'ring_size';
					$display_on_load = 'style="display:none;"';		
				}
			endforeach;
		}else{
			$product_option_type = 'engraving';
			$display_on_load = 'style="display:none;"';
		}
		?>
        <?php //echo '<pre>';print_r($skuArr);echo '</pre>';?>
        <?php
        if(isset($_REQUEST['build_step_last']))
		{
		?>
                <div name="prod_options-<?php echo $product_option_type;?>" id="prod_options_<?php echo $p;?>" <?php echo $display_on_load;?>>
                     <div class="clear"></div>
                    <div class="pagetitle" id="pageheading"><?php echo $_option->getTitle() ?></div><div class="clear"></div>
                    <div class="alldetailbox1" id="product_options_html">
                    <?php
                    $x=1;
                    foreach ($values as $k => $v):			
                        if($x==1){
                            $sel = 'customize_step_sel';
                        }else{
                            $sel = '';
                        }
                    ?>
                    <div class="selectoptions <?php echo $sel; ?>"><img src="/skin/frontend/angara/default/images/build-your-own/stonetype.jpg"/>
                        <div class="selectoptionsprice">
                            <div class="flexisize"><?php echo $v->getDefaultTitle();?></div>
                            <div class="flexiprice"><?php //echo $v->getPrice();?></div>
                        </div>
                    </div>		
                    <?php
                        $x++;
                    endforeach;						
                    ?>             
                    </div>			    
                </div>		
		<?
		}
		?>
        <?php
        if(isset($_REQUEST['build_step_last']))
		{
		?>
                <div style="display:none;">	
                    <?php echo $this->getOptionHtml($_option) ?>
                </div>
        <?php
		}else{
		?>
                <div style="display:block;">	
                    <?php echo $this->getOptionHtml($_option) ?>
                </div>
		<?	
		}
		?>		        
        <?php $p++; ?>
	<?php endforeach; ?>
    </dl>
<?php endif; ?>